@page "/_AdminLogin"
@using LinkRouter.App.Services
@inject IJSRuntime Js
@inject AdminService AdminService
@inject NavigationManager NavigationManager;

<title>Admin Login</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet"
      integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q"
        crossorigin="anonymous"></script>
<script src="https://unpkg.com/lucide@latest"></script>
<script>
    lucide.createIcons();
</script>
<style>* {
        background-color: #212121;
    }
</style>

<div class="d-flex justify-content-center mt-4 text-white">
    <div class="text-white">
            <h1>Password</h1>
            <div>
                <input
                    type="password"
                    id="passwordInput"
                    class="bg-secondary rounded-1"
                    @bind="PasswordInput"/>
            </div>
        <button @onclick="Login" class="btn btn-outline-light mt-3 d-flex justify-content-center">Login as
            Admin
        </button>
    </div>
</div>

@code {
    private string PasswordInput { get; set; } = "";

    private async Task Login()
    {
        if (string.IsNullOrEmpty(PasswordInput))
        {
            await Js.InvokeVoidAsync("alert", "No Password input!");
            return;
        }

        var isAdminPassword = await AdminService.IsValidAdminPassword(PasswordInput);

        if (isAdminPassword)
        {
            await Js.InvokeVoidAsync("eval", $"document.cookie = 'password={PasswordInput};'");
            await Js.InvokeVoidAsync("alert", "Logged in!");
            NavigationManager.NavigateTo("/_Admin");
        }
        else
        {
            await Js.InvokeVoidAsync("alert", "Password mismatch!");
        }
    }

}